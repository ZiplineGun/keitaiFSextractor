import os
import csv
import re

with open(os.path.join("..\\models.csv"), encoding="utf8") as inf:
    model_infos = tuple(csv.DictReader(inf))
    
KTDUMPER_MODELS = [
    "ca-01c",
    "830ca",
    "930ca",
    "n2051",
    "n2102v",
    "n900i",
    "n900is",
    "n900ig",
    "n700i",
    "n901ic",
    "n901is",
    "n701i",
    "n902i",
    "n902il",
    "n902is",
    "n702id",
    "n702is",
    "n903i",
    "n703id",
    "n703iu",
    "n904i",
    "n704iu",
    "n905i",
    "n905iu",
    "n705i",
    "n705iu",
    "n906i",
    "n906il",
    "n906iu",
    "n706i",
    "n706ie",
    "n706i2",
    "n-01a",
    "n-02a",
    "n-03a",
    "n-04a",
    "n-05a",
    "n-06a",
    "n-07a",
    "n-08a",
    "n-09a",
    "n-01b",
    "n-01b.v2",
    "n-02b",
    "n-03b",
    "n-04b",
    "n-05b",
    "n-06b",
    "n-07b",
    "n-08b",
    "n-01c",
    "n-02c",
    "n-03c",
    "n-05c",
    "n-02d",
    "n-03d",
    "n-01e",
    "n-01f",
    "802n",
    "820n",
    "821n",
    "930n",
    "830n",
    "931n",
    "831n",
    "841n",
    "p2102v",
    "p900i",
    "p900iv",
    "p700i",
    "p901i",
    "p901is",
    "p901itv",
    "p851i",
    "p902i",
    "p902is",
    "p701id",
    "p702i",
    "p702id",
    "p703i",
    "p703iu",
    "p903i",
    "p903itv",
    "p903ix",
    "p904i",
    "p704i",
    "p704iu",
    "p905i",
    "p705i",
    "p705icl",
    "p705iu",
    "p706iu",
    "p706ie",
    "p906i",
    "p-01a",
    "p-02a",
    "p-03a",
    "p-04a",
    "p-05a",
    "p-06a",
    "p-07a",
    "p-08a",
    "p-09a",
    "p-10a",
    "p-01b",
    "p-02b",
    "p-03b",
    "p-04b",
    "p-05b",
    "p-06b",
    "p-07b",
    "p-01c",
    "p-02c",
    "p-03c",
    "p-04c",
    "p-05c",
    "p-06c",
    "p-03d",
    "p-01e",
    "p-01f",
    "p-01g",
    "p-01h",
    "920p",
    "921p",
    "930p",
    "823p",
    "824p",
    "832p",
    "940p",
    "942p",
    "842p",
    "001p",
    "103p",
    "301p",
    "401pm",
    "sh903itv",
    "sh703i",
    "sh904i",
    "sh704i",
    "sh905i",
    "sh905itv",
    "sh705i",
    "sh705i2",
    "sh906i",
    "sh906itv",
    "sh706i",
    "sh706ie",
    "sh706iw",
    "sh-01a",
    "sh-02a",
    "sh-03a",
    "sh-04a",
    "sh-05a",
    "sh-06a",
    "sh-06a.v2",
    "sh-07a",
    "sh-08a",
    "sh-01b",
    "sh-02b",
    "sh-03b",
    "sh-06b",
    "sh-07b",
    "sh-08b",
    "sh-09b",
    "sh-01c",
    "sh-02c",
    "sh-04c",
    "sh-05c",
    "sh-06c",
    "sh-08c",
    "sh-09c",
    "sh-10c",
    "sh-11c",
    "sh-07f",
    "f2051",
    "f2102v",
    "f900i",
    "f900ic",
    "f900it",
    "f700i",
    "f700is",
    "f901i",
    "f901ic",
    "f901is",
    "f801i",
    "f902i",
    "f902is",
    "f702id",
    "f903i",
    "f903ix",
    "f883ies",
    "f883iess",
    "f703i",
    "f884i",
    "f884ies",
    "f904i",
    "f704i",
    "f905itw",
    "f905i",
    "f705i",
    "f906i",
    "f706i",
    "f-01a",
    "f-02a",
    "f-03a",
    "f-04a",
    "f-05a",
    "f-06a",
    "f-07a",
    "f-08a",
    "f-09a",
    "f-10a",
    "f-01b",
    "f-02b",
    "f-03b",
    "f-04b",
    "f-06b",
    "f-07b",
    "f-09b",
    "f-01c",
    "f-02c",
    "f-03c",
    "f-04c",
    "f-05c",
    "f-08c",
    "f-09c",
    "f-11c",
    "d800ids",
    "d901i",
    "d901is",
    "d701i",
    "d701iwm",
    "d902i",
    "d902is",
    "d702i",
    "d702if",
    "d903i",
    "d903itv",
    "d703i",
    "d904i",
    "d704i",
    "d705i",
    "d705iu",
    "d905i",
    "so902i",
    "so902iwpp",
    "so702i",
    "so703i",
    "so903i",
    "so903itv",
    "so704i",
    "so705i",
    "so706i",
]

def to_ktdumper_modelname(model_name):
    model_name = model_name.replace("Î¼", "u").replace("+", "p").lower()
    model_name = re.sub(r"ii$", "2", model_name)
    return model_name

for model in KTDUMPER_MODELS:
    if model not in [to_ktdumper_modelname(m["Phone_Model"].strip()) for m in model_infos]:
        print(model)